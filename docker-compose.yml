
services:
  # Setup to run a reverse proxy in front of the app
  # to run them from a single domain.
#  web:
#    image: nginx:1.25.0-alpine3.17
#    working_dir: /app
#    ports:
#      - "80:80"
#      - "443:443"
#    depends_on:
#      - python
#    volumes:
#      - "./docker/files/static/502.html:/app/502.html"
#      - "./docker/files/config/nginx.pizza.conf:/etc/nginx/templates/default.conf.template"
#      - "./docker/files/certs:/etc/nginx/certs"
#    environment:
#      - PYTHON_HOST=http://python
#      - NEXT_HOST=http://next
#      - SERVER_NAME=pizzaoven.holontool.nl
#    extra_hosts:
#      - "host.docker.internal:host-gateway"

  # prod mode
#  next:
#    build:
#      context: ./frontend
#      dockerfile: prod.Dockerfile
#      args:
#        NEXT_PUBLIC_WAGTAIL_API_URL: http://localhost:8000/wt/api/nextjs
#        NEXT_PUBLIC_TINY_URL_API_KEY: wasd
#    ports:
#      - "3000:3000"
#    environment:
#      WAGTAIL_API_URL: http://python:8000/wt/api/nextjs

  # dev mode
  next:
    image: node:20.5.1
    command: npm run dev
    working_dir: /app
    volumes:
      - "./frontend:/app"
    ports:
      - "3001:3001"
    environment:
      WAGTAIL_API_URL: http://python:8000/wt/api/nextjs
      NEXT_PUBLIC_WAGTAIL_API_URL: http://localhost:8000/wt/api/nextjs
      NEXT_PUBLIC_TINY_URL_API_KEY: wasd

  python:
    build:
      context: ./src
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - "./src:/app"
    depends_on:
      - db
    environment:
      ALLOWED_HOSTS: "*"
      AZURE_ACCOUNT_NAME: holonstorage
      MEDIA_LOCATION: media-dev
      STATIC_LOCATION: static-dev
      DB_HOST: db
      DB_USER: postgres
      DB_NAME: postgres
      DB_PASSWORD: postgres
      RETURN_SCENARIO: True
      SECRET_KEY: 5746384
      DOMAIN_HOST: http://localhost:8000
      N_WORKERS: 2
      DJANGO_SETTINGS_MODULE: pipit.settings.prod
      SENTRY_ENVIRONMENT: local
    env_file: ./docker/config/python.env

  python-test:
    build:
      context: ./src
      dockerfile: Dockerfile
    entrypoint: "python manage.py"
    command: "test"
    volumes:
      - "./src:/app"
    depends_on:
      - db
    environment:
      ALLOWED_HOSTS: "*"
      DB_HOST: db
      DB_USER: postgres
      DB_NAME: djangotest
      DB_PASSWORD: postgres
      RETURN_SCENARIO: false
      SECRET_KEY: 5746384
      DOMAIN_HOST: http://localhost:8000
      N_WORKERS: 2
      DJANGO_SETTINGS_MODULE: pipit.settings.test
    env_file: ./docker/config/python.env

  db:
    image: postgres:13.9
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "8083:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres

volumes:
  postgres-data:
